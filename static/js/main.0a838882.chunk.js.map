{"version":3,"sources":["assets/defaultImg.jpg","Store.js","EpisodeList.jsx","index.js","App.jsx","HomePage.jsx","FavePage.jsx"],"names":["module","exports","__webpack_require__","p","Store","React","createContext","initialState","episodes","favourites","reducer","state","action","type","Object","objectSpread","payload","concat","toConsumableArray","EpisodeList","props","toggleFavAction","map","episode","react_default","a","createElement","className","key","id","image","src","medium","alt","name","defaultImg","style","height","width","season","number","onClick","find","fav","ReactDOM","render","_React$useReducer","useReducer","_React$useReducer2","slicedToArray","value","dispatch","Provider","children","es","useContext","Fragment","console","log","to","length","path","_React$useContext","fetchDataAction","_ref","asyncToGenerator","regenerator_default","mark","_callee","data","dataJSON","wrap","_context","prev","next","fetch","sent","json","abrupt","_embedded","stop","apply","this","arguments","useEffect","episodeInFavourites","includes","dispatchObj","filter","Suspense","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.0a838882.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultImg.771c325a.jpg\";","import React from 'react'\r\n\r\nexport const Store = React.createContext();\r\n\r\nconst initialState = {\r\n    episodes: [],\r\n    favourites: []\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n        case 'FETCH_DATA':\r\n          return { ...state, episodes: action.payload };\r\n          // add_fav REPLACE the favourites array with a new array with the new favourite array with new fav episode added in\r\n        case 'ADD_FAV':\r\n          return {...state,\r\n            favourites:[...state.favourites, action.payload]};\r\n          // remove_fav REPLACE the favourite array with the new favourite array that got the target episode removed\r\n        case 'REMOVE_FAV':\r\n          return {...state,\r\n            favourites: action.payload}\r\n        default:\r\n          return state;\r\n    }\r\n}\r\n\r\nexport function StoreProvider(props) {\r\n    const [state, dispatch] = React.useReducer(reducer, initialState);\r\n    const value = { state, dispatch };\r\n    return <Store.Provider value={value}>{props.children}</Store.Provider>\r\n}","import React from 'react';\r\nimport defaultImg from './assets/defaultImg.jpg';\r\n\r\nexport default function EpisodeList (props) {\r\n    const {episodes, toggleFavAction, favourites} = props;\r\n     return episodes.map(episode => {\r\n        return (\r\n          \r\n          <section className=\"episode-box\" key={episode.id}>\r\n\r\n            {episode.image !== null ? <img src={episode.image.medium} alt={`Rick and Morty ${episode.name}`}/> :\r\n                                      <img src={defaultImg} style={{height: '150px', width:'150px'}} alt=\"Default\" /> } \r\n\r\n\r\n            <div>{episode.name}</div>\r\n            <section>\r\n              <div>\r\n                Season: {episode.season} Number: {episode.number}\r\n              </div>\r\n            <button type='button' onClick={() => toggleFavAction(episode)}>\r\n              {/* find fav item in array favourites and if fav item id is equal to the episode id = then the episode is already in the fav array -> turn the fav text to unfar */}\r\n              {favourites.find(fav => fav.id === episode.id) ? 'Unfav' : 'Fav'}\r\n            </button>\r\n            </section>\r\n          </section>\r\n        );\r\n    })\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nimport { StoreProvider } from './Store';\r\nimport './index.css';\r\n\r\n\r\n\r\nimport HomePage from './HomePage';\r\nimport { Router } from '@reach/router';\r\nimport FavPage from './FavePage';\r\n\r\nReactDOM.render(\r\n    <StoreProvider>\r\n      <Router>\r\n        <App path='/'>\r\n          <HomePage path='/' />\r\n          <FavPage path='/faves' /> \r\n        </App>\r\n      </Router>\r\n    </StoreProvider>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Store } from './Store';\r\nimport {Link} from '@reach/router';\r\n\r\n\r\nexport default function App(props) {\r\n\r\n  const {state} = React.useContext(Store);\r\n\r\n\r\n  \r\n  return (\r\n    \r\n    <React.Fragment>\r\n        {console.log(state)}\r\n        <header className=\"header\">\r\n            <div >\r\n              <h1>Rick and Morty</h1>\r\n              <p>Pick your favourite episodes</p>\r\n            </div>\r\n            <div>\r\n              <Link to='/'>Home</Link>{' '}\r\n              <Link to='/faves'>Favourite(s) {state.favourites.length}</Link>\r\n            </div>\r\n        </header>      \r\n          \r\n      {props.children}\r\n    </React.Fragment>\r\n  );\r\n}","import React,{useEffect} from 'react';\r\nimport { Store } from './Store';\r\nimport EpisodeList from './EpisodeList';\r\n\r\n\r\nexport default function App() {\r\n\r\n  const {state, dispatch} = React.useContext(Store);\r\n\r\n\r\n  const fetchDataAction = async () => {\r\n    const data = await fetch('https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes');\r\n    const dataJSON = await data.json();\r\n    return dispatch({\r\n      type: 'FETCH_DATA',\r\n      payload: dataJSON._embedded.episodes\r\n    });\r\n  };\r\n\r\n    const toggleFavAction = episode => {\r\n        // boolean to check if the the episode object is already in fav\r\n        const episodeInFavourites = state.favourites.includes(episode);\r\n        // declare object that we are going to dispatch with add_fav at default\r\n        let dispatchObj ={\r\n        type: 'ADD_FAV',\r\n        // payload is the episode that we clicked on\r\n        payload: episode\r\n        };\r\n\r\n        if(episodeInFavourites) {\r\n        //  make a array which have every element except the one with was already in fav and being clicked on right now (passed into the function as 'episode')\r\n        const favouriteWithoutEpisodes = state.favourites.filter(fav => fav.id !== episode.id)\r\n        dispatchObj = {\r\n            type: 'REMOVE_FAV',\r\n            // payload is the array,replace favourite array with the new array that we just made above\r\n            payload: favouriteWithoutEpisodes\r\n        }\r\n        }\r\n        return dispatch(dispatchObj);\r\n    }\r\n  useEffect( () => {\r\n    state.episodes.length === 0 && fetchDataAction();\r\n  }, [])\r\n\r\n  const props = {\r\n    episodes: state.episodes,\r\n    toggleFavAction: toggleFavAction,\r\n    favourites: state.favourites\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <React.Suspense fallback={<div>Loading...</div>}>\r\n        {console.log(state)}      \r\n          <section className=\"episode-layout\">\r\n            <EpisodeList {...props}/>\r\n          </section>\r\n      </React.Suspense>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { Store } from './Store';\r\n\r\nimport EpisodesList from './EpisodeList'\r\n\r\nexport default function FavPage() {\r\n    const { state, dispatch } = React.useContext(Store);\r\n\r\n    const toggleFavAction = episode => {\r\n        // boolean to check if the the episode object is already in fav\r\n        const episodeInFavourites = state.favourites.includes(episode);\r\n        // declare object that we are going to dispatch with add_fav at default\r\n        let dispatchObj ={\r\n          type: 'ADD_FAV',\r\n          // payload is the episode that we clicked on\r\n          payload: episode\r\n        };\r\n    \r\n        if(episodeInFavourites) {\r\n          //  make a array which have every element except the one with was already in fav and being clicked on right now (passed into the function as 'episode')\r\n          const favouriteWithoutEpisodes = state.favourites.filter(fav => fav.id !== episode.id)\r\n          dispatchObj = {\r\n            type: 'REMOVE_FAV',\r\n            // payload is the array,replace favourite array with the new array that we just made above\r\n            payload: favouriteWithoutEpisodes\r\n          }\r\n        }\r\n        return dispatch(dispatchObj);\r\n      }\r\n\r\n    const props = {\r\n        episodes: state.favourites,\r\n        toggleFavAction: toggleFavAction,\r\n        favourites: state.favourites\r\n    };\r\n    return (\r\n        <React.Suspense fallback={<div>Loading...</div>}>\r\n        <div className='episode-layout'>\r\n            <EpisodesList {...props} />\r\n        </div>\r\n        </React.Suspense>\r\n    );\r\n}"],"sourceRoot":""}